{"version":3,"file":"checkout.min.js","mappings":"YAAA,IACUA,IAAkB,CAEpBC,qBAAsB,wBAEtBC,KAAM,WAAY,IAAAC,EAAA,KACV,oBAAuBC,gBAAkBA,eAAeC,kBAI5DC,KAAKC,aAEDD,KAAKE,kBACLC,OAAOC,SAASC,MAAMC,GAAG,oBAAoB,SAAAC,GACzCV,EAAKI,YACT,IAER,EAMAO,sBAAuB,SAAUC,GACzB,oBAAuBX,iBAG3BA,eAAeY,sBAAwBD,EAC3C,EAMAE,qBAAsB,WAClB,MAAI,oBAAuBb,eAChB,KAEJA,eAAeY,qBAC1B,EAEAE,qBAAsB,SAAUC,GAAkB,IAAAC,EAAA,KAC1CJ,EAAwBV,KAAKW,uBAE7BD,IAA0BN,SAASW,cAAc,IAADC,OAAKN,MACrDA,EAAwB,KACxBV,KAAKQ,sBAAsBE,IAG/BG,EAAiBI,SAAQ,SAACC,EAAiBC,GACvC,IAAIC,EAAUF,EAAgBT,KAAOC,EAC3B,IAANS,GAAYT,IACZU,GAAU,EACVN,EAAKN,sBAAsBU,EAAgBT,KAE/CS,EAAgBE,QAAUA,CAC9B,GACJ,EAKAC,iBAAkB,SAAUR,GACxBb,KAAKQ,sBAAsB,MAC3BK,EAAiBI,SAAQ,SAAAC,GAAe,OAAIA,EAAgBE,SAAU,CAAK,GAC/E,EAKAE,kBAAmB,SAAUC,EAAsBV,EAAkBW,GACjE,IAAMC,EAAYF,GAAwBA,EAAqBH,QACzDM,EAAgB1B,KAAKW,wBACtBc,GAAcC,KAInB1B,KAAK2B,4BAA4BH,GACjCxB,KAAKY,qBAAqBC,GAC9B,EAEAe,sBAAuB,SAAUL,GACzBA,GACAA,EAAqBM,UAAUC,OAAO,cAE9C,EAMAC,+BAAgC,SAAUP,EAAgBX,GAAkB,IAAAmB,EAAA,KACxER,EAAeP,SAAQ,SAAAgB,GACnBA,EAAcC,iBAAiB,UAAU,SAAA3B,GACjCA,EAAE4B,OAAO1B,KAAOuB,EAAKrC,sBAAwBY,EAAE4B,OAAOf,SACtDY,EAAKX,iBAAiBR,EAE9B,GACJ,GACJ,EAEAc,4BAA6B,SAAUH,GAAmC,IAAAY,EAAA,KAAnBC,EAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC5Dd,EAAeP,SAAQ,SAAAgB,GACnB,IAAMb,EAAUa,EAAcxB,KAAO2B,EAAKzC,qBACtCyB,IAAYa,EAAcb,UAG9Ba,EAAcb,QAAUA,EAEpBiB,IACID,EAAKlC,iBACLC,OAAO8B,GAAeQ,QAAQ,UAE9BR,EAAcS,cAAc,IAAIC,MAAM,YAGlD,GACJ,EAOAC,iCAAkC,SAAU/B,EAAkBW,GAAgB,IAAAqB,EAAA,KAC1EhC,EAAiBI,SAAQ,SAAAC,GAAe,OAAIA,EAAgBgB,iBAAiB,UAAU,SAAA3B,GAC9EA,EAAE4B,OAAOf,UAIdyB,EAAKrC,sBAAsBU,EAAgBT,IAC3CoC,EAAKlB,4BAA4BH,GAAgB,GAE7CqB,EAAK3C,kBACLC,OAAOC,SAASC,MAAMoC,QAAQ,2BAEtC,GAAE,GACN,EAEAxC,WAAY,WACR,IAAMY,EAAmBT,SAAS0C,iBAAiB,iCAC7CtB,EAAiBpB,SAAS0C,iBAAiB,2BAC3CvB,EAAuBnB,SAAS2C,eAAe/C,KAAKL,sBAE1DK,KAAK4B,sBAAsBL,GAC3BvB,KAAKsB,kBAAkBC,EAAsBV,EAAkBW,GAC/DxB,KAAK+B,+BAA+BP,EAAgBX,GACpDb,KAAK4C,iCAAiC/B,EAAkBW,EAC5D,EAEAtB,eAAgB,iBAAM,oBAAuBC,MAAM,GAGvDC,SAAS8B,iBAAiB,oBAAoB,kBAAMxC,EAAgBE,MAAM,G","sources":["webpack://sequra-wc/./assets/js/src/page/checkout.js"],"sourcesContent":["(function () {\n    const ClassicCheckout = {\n\n        SQ_PAYMENT_METHOD_ID: 'payment_method_sequra',\n\n        init: function () {\n            if ('undefined' !== typeof SeQuraCheckout && SeQuraCheckout.isBlockCheckout) {\n                return\n            }\n\n            this.bindEvents();\n\n            if (this.isJQueryActive()) {\n                jQuery(document.body).on('updated_checkout', e => {\n                    this.bindEvents()\n                });\n            }\n        },\n\n        /**\n         * Save selected SeQura payment method in the context.\n         * @param {string|null} id\n         */\n        saveCheckedPaymentOpt: function (id) {\n            if ('undefined' === typeof SeQuraCheckout) {\n                return;\n            }\n            SeQuraCheckout.selectedPaymentMethod = id;\n        },\n\n        /**\n         * Get selected SeQura payment method from the context.\n         * @returns {string|null}\n         */\n        getCheckedPaymentOpt: function () {\n            if ('undefined' === typeof SeQuraCheckout) {\n                return null\n            }\n            return SeQuraCheckout.selectedPaymentMethod;\n        },\n\n        checkSqProductOption: function (sqProductOptions) {\n            let selectedPaymentMethod = this.getCheckedPaymentOpt();\n\n            if (selectedPaymentMethod && !document.querySelector(`#${selectedPaymentMethod}`)) {\n                selectedPaymentMethod = null;\n                this.saveCheckedPaymentOpt(selectedPaymentMethod);\n            }\n\n            sqProductOptions.forEach((sqProductOption, i) => {\n                let checked = sqProductOption.id === selectedPaymentMethod;\n                if (i === 0 && !selectedPaymentMethod) {\n                    checked = true;\n                    this.saveCheckedPaymentOpt(sqProductOption.id);\n                }\n                sqProductOption.checked = checked;\n            });\n        },\n\n        /**\n         * Uncheck all SeQura payment options and reset the selected one.\n         */\n        uncheckSqOptions: function (sqProductOptions) {\n            this.saveCheckedPaymentOpt(null);\n            sqProductOptions.forEach(sqProductOption => sqProductOption.checked = false);\n        },\n\n        /**\n         * Select SeQura payment method and option based on the current context.\n         */\n        maybeSelectSeQura: function (sqPaymentMethodInput, sqProductOptions, paymentMethods) {\n            const isChecked = sqPaymentMethodInput && sqPaymentMethodInput.checked;\n            const optionChecked = this.getCheckedPaymentOpt();\n            if (!isChecked && !optionChecked) {\n                return;\n            }\n\n            this.updateCheckedPaymentMethods(paymentMethods);\n            this.checkSqProductOption(sqProductOptions);\n        },\n\n        removeInputRadioClass: function (sqPaymentMethodInput) {\n            if (sqPaymentMethodInput) {\n                sqPaymentMethodInput.classList.remove('input-radio');\n            }\n        },\n\n        /**\n         * Watch for changes in the WooCommerce payment methods \n         * and uncheck SeQura options if another payment method is selected.\n         */\n        addPaymentMethodChangeListener: function (paymentMethods, sqProductOptions) {\n            paymentMethods.forEach(paymentMethod => {\n                paymentMethod.addEventListener('change', e => {\n                    if (e.target.id !== this.SQ_PAYMENT_METHOD_ID && e.target.checked) {\n                        this.uncheckSqOptions(sqProductOptions);\n                    }\n                });\n            });\n        },\n\n        updateCheckedPaymentMethods: function (paymentMethods, emitEvent = false) {\n            paymentMethods.forEach(paymentMethod => {\n                const checked = paymentMethod.id === this.SQ_PAYMENT_METHOD_ID;\n                if (checked === paymentMethod.checked) {\n                    return;\n                }\n                paymentMethod.checked = checked;\n\n                if (emitEvent) {\n                    if (this.isJQueryActive()) {\n                        jQuery(paymentMethod).trigger('change');\n                    } else {\n                        paymentMethod.dispatchEvent(new Event('change'));\n                    }\n                }\n            })\n        },\n\n        /**\n         * Watch for changes in the SeQura product options selection\n         * to save the selected payment method in the context and\n         * trigger proper events.\n         */\n        addSqProductOptionChangeListener: function (sqProductOptions, paymentMethods) {\n            sqProductOptions.forEach(sqProductOption => sqProductOption.addEventListener('change', e => {\n                if (!e.target.checked) {\n                    return\n                }\n\n                this.saveCheckedPaymentOpt(sqProductOption.id);\n                this.updateCheckedPaymentMethods(paymentMethods, true);\n\n                if (this.isJQueryActive()) {\n                    jQuery(document.body).trigger('payment_method_selected');\n                }\n            }));\n        },\n\n        bindEvents: function () {\n            const sqProductOptions = document.querySelectorAll('.sequra-payment-method__input');\n            const paymentMethods = document.querySelectorAll('[name=\"payment_method\"]');\n            const sqPaymentMethodInput = document.getElementById(this.SQ_PAYMENT_METHOD_ID);\n\n            this.removeInputRadioClass(sqPaymentMethodInput);\n            this.maybeSelectSeQura(sqPaymentMethodInput, sqProductOptions, paymentMethods);\n            this.addPaymentMethodChangeListener(paymentMethods, sqProductOptions);\n            this.addSqProductOptionChangeListener(sqProductOptions, paymentMethods);\n        },\n\n        isJQueryActive: () => 'undefined' !== typeof jQuery,\n    }\n\n    document.addEventListener('DOMContentLoaded', () => ClassicCheckout.init());\n})();"],"names":["ClassicCheckout","SQ_PAYMENT_METHOD_ID","init","_this","SeQuraCheckout","isBlockCheckout","this","bindEvents","isJQueryActive","jQuery","document","body","on","e","saveCheckedPaymentOpt","id","selectedPaymentMethod","getCheckedPaymentOpt","checkSqProductOption","sqProductOptions","_this2","querySelector","concat","forEach","sqProductOption","i","checked","uncheckSqOptions","maybeSelectSeQura","sqPaymentMethodInput","paymentMethods","isChecked","optionChecked","updateCheckedPaymentMethods","removeInputRadioClass","classList","remove","addPaymentMethodChangeListener","_this3","paymentMethod","addEventListener","target","_this4","emitEvent","arguments","length","undefined","trigger","dispatchEvent","Event","addSqProductOptionChangeListener","_this5","querySelectorAll","getElementById"],"sourceRoot":""}